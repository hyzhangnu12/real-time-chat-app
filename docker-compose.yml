version: "3.8"
name: mychat
networks:
  mychat_network:
    driver: bridge
services:
  flask:
    build:
      context: flask
      target: builder
    container_name: flask
    ports:
      - "5000:5000"
    restart: unless-stopped
    networks:
      - mychat_network
    depends_on:
      - redpanda
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.14
    container_name: redpanda
    command:
      - redpanda start
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with eachother internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      # The amount of memory to make available to Redpanda.
      - --memory 1G
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # enable logs for debugging.
      - --default-log-level=debug
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - ./redpanda/data:/var/lib/redpanda/data
    networks:
      - mychat_network
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
  console:
    image: docker.redpanda.com/redpandadata/console:v2.3.5
    container_name: redpanda-console
    command: /app/console
    environment:
      CONFIG_FILEPATH: /etc/redpanda/redpanda-console-config.yaml
    volumes:
      - ./redpanda/console/config.yml:/etc/redpanda/redpanda-console-config.yaml
    ports:
      - 8080:8080
    networks:
      - mychat_network
    depends_on:
      - redpanda